=======================================================     Паттерны проектирования     ============================================================================

Полиморфизм - это возможность объектов разных классов взаимодействовать с одинаковыми свойствами, методами и операндами 
    Пример: + - один знак, разные действия
        a= "hello" + " " + "world" + "!"
        b= 1+2+3+4+4


Инкапсуляция - это настройка контроля доступа к методам или свойствам класса. Сокрытие и объединение логики в пределах одного класса.
    Используя инкапсуляцию, мы можем сказать, что какой-то метод можно вызвать только в этом классе или в классах наследниках

    В Python инкапсуляция работает только на условиях договоренностей, если мы напишем _ перед названием метода, то это значит, что разработчик не хочет, что бы мы туда лезли и вызывали из вне




Паттерны проектирования - это какие-то приёмы для построения приложений или их отдельных частей, позволяющие либо стандартизировать код, либо так же решить какую-то проблему
Паттерны - какой-то инженерный чертеж, с описанием решения какой-то проблемы, но без четкой инструкции ее решения пошагово, в чем и есть отличие от алгоритма

Декоратор - функция высшего порядка, в качестве главного аргумента на вход принимает другую функцию. Является одним из паттернов проектирования. 
