##########################################   Оптимизация кода   #################################################################

def NameFunc(агрументы):
    код функции
    return что возвращает

*args - обозначение неограниченного кол-ва позиционных аргументов функции
**kwargs - обозначение неограниченного кол-ва именнованных агргументов функции

унарный оператор - принимает 1 значение     (not(a))
бинарный оператор - принимает 2 значения    (a or b)
тернарный оператор - принимает 3 значения   
    (
    age = 18
    if age >= 18:
        is_allow = True
    else:
        is_allow = False
        )

    (is_allow = True if age >= 18 else False)

    (is_allof = age >=18)

val = None      (val - ничего, пустота)
if val == None:
    res= []
else:
    res =val

print(res)


отличие a == b от a is b в том, что если при a is b пайтон проверяет, ссылаются ли a и b на одну ячейку памяти, тогда True, иначе False. a == b сверяет значения a и b, и если они одинаковы - True, иначе False




Кортежи - это списки, за изключением того, что кортежи - неизменяемые структуры данных (tuple)

В словарях нельзя использовать списки как ключ. Зато кортежи - без проблем. Так же кортежи занимают меньше памяти, ускоряя работу программы